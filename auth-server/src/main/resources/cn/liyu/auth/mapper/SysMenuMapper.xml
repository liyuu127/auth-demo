<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.liyu.auth.mapper.SysMenuMapper">
  <resultMap id="BaseResultMap" type="cn.liyu.auth.entity.SysMenu">
    <!--@mbg.generated-->
    <!--@Table sys_menu-->
    <id column="id" property="id" />
    <result column="title" property="title" />
    <result column="type" property="type" />
    <result column="pid" property="pid" />
    <result column="permission" property="permission" />
    <result column="component" property="component" />
    <result column="sort" property="sort" />
    <result column="hidden" property="hidden" />
    <result column="path" property="path" />
    <result column="create_by" property="createBy" />
    <result column="create_time" property="createTime" />
    <result column="update_by" property="updateBy" />
    <result column="update_time" property="updateTime" />
    <result column="deleted" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, title, `type`, pid, permission, component, sort, hidden, `path`, create_by, create_time, 
    update_by, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from sys_menu
    where id = #{id}
  </select>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.liyu.auth.entity.SysMenu" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_menu (title, `type`, pid, permission, component, sort, hidden, 
      `path`, create_by, create_time, update_by, update_time, deleted)
    values (#{title}, #{type}, #{pid}, #{permission}, #{component}, #{sort}, #{hidden}, 
      #{path}, #{createBy}, #{createTime}, #{updateBy}, #{updateTime}, #{deleted})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.liyu.auth.entity.SysMenu" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title},
      </if>
      <if test="type != null">
        #{type},
      </if>
      <if test="pid != null">
        #{pid},
      </if>
      <if test="permission != null">
        #{permission},
      </if>
      <if test="component != null">
        #{component},
      </if>
      <if test="sort != null">
        #{sort},
      </if>
      <if test="hidden != null">
        #{hidden},
      </if>
      <if test="path != null">
        #{path},
      </if>
      <if test="createBy != null">
        #{createBy},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateBy != null">
        #{updateBy},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="deleted != null">
        #{deleted},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.liyu.auth.entity.SysMenu">
    <!--@mbg.generated-->
    update sys_menu
    <set>
      <if test="title != null">
        title = #{title},
      </if>
      <if test="type != null">
        `type` = #{type},
      </if>
      <if test="pid != null">
        pid = #{pid},
      </if>
      <if test="permission != null">
        permission = #{permission},
      </if>
      <if test="component != null">
        component = #{component},
      </if>
      <if test="sort != null">
        sort = #{sort},
      </if>
      <if test="hidden != null">
        hidden = #{hidden},
      </if>
      <if test="path != null">
        `path` = #{path},
      </if>
      <if test="createBy != null">
        create_by = #{createBy},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="deleted != null">
        deleted = #{deleted},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.liyu.auth.entity.SysMenu">
    <!--@mbg.generated-->
    update sys_menu
    set title = #{title},
      `type` = #{type},
      pid = #{pid},
      permission = #{permission},
      component = #{component},
      sort = #{sort},
      hidden = #{hidden},
      `path` = #{path},
      create_by = #{createBy},
      create_time = #{createTime},
      update_by = #{updateBy},
      update_time = #{updateTime},
      deleted = #{deleted}
    where id = #{id}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_menu
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.title}
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.type}
        </foreach>
      </trim>
      <trim prefix="pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.pid}
        </foreach>
      </trim>
      <trim prefix="permission = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.permission}
        </foreach>
      </trim>
      <trim prefix="component = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.component}
        </foreach>
      </trim>
      <trim prefix="sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.sort}
        </foreach>
      </trim>
      <trim prefix="hidden = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.hidden}
        </foreach>
      </trim>
      <trim prefix="`path` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.path}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createBy}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.deleted}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sys_menu
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.title != null">
            when id = #{item.id} then #{item.title}
          </if>
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.type != null">
            when id = #{item.id} then #{item.type}
          </if>
        </foreach>
      </trim>
      <trim prefix="pid = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.pid != null">
            when id = #{item.id} then #{item.pid}
          </if>
        </foreach>
      </trim>
      <trim prefix="permission = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.permission != null">
            when id = #{item.id} then #{item.permission}
          </if>
        </foreach>
      </trim>
      <trim prefix="component = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.component != null">
            when id = #{item.id} then #{item.component}
          </if>
        </foreach>
      </trim>
      <trim prefix="sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.sort != null">
            when id = #{item.id} then #{item.sort}
          </if>
        </foreach>
      </trim>
      <trim prefix="hidden = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.hidden != null">
            when id = #{item.id} then #{item.hidden}
          </if>
        </foreach>
      </trim>
      <trim prefix="`path` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.path != null">
            when id = #{item.id} then #{item.path}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createBy != null">
            when id = #{item.id} then #{item.createBy}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id} then #{item.createTime}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateBy != null">
            when id = #{item.id} then #{item.updateBy}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id} then #{item.updateTime}
          </if>
        </foreach>
      </trim>
      <trim prefix="deleted = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.deleted != null">
            when id = #{item.id} then #{item.deleted}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_menu
    (title, `type`, pid, permission, component, sort, hidden, `path`, create_by, create_time, 
      update_by, update_time, deleted)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.title}, #{item.type}, #{item.pid}, #{item.permission}, #{item.component}, 
        #{item.sort}, #{item.hidden}, #{item.path}, #{item.createBy}, #{item.createTime}, 
        #{item.updateBy}, #{item.updateTime}, #{item.deleted})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.liyu.auth.entity.SysMenu" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      title,
      `type`,
      pid,
      permission,
      component,
      sort,
      hidden,
      `path`,
      create_by,
      create_time,
      update_by,
      update_time,
      deleted,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{title},
      #{type},
      #{pid},
      #{permission},
      #{component},
      #{sort},
      #{hidden},
      #{path},
      #{createBy},
      #{createTime},
      #{updateBy},
      #{updateTime},
      #{deleted},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      title = #{title},
      `type` = #{type},
      pid = #{pid},
      permission = #{permission},
      component = #{component},
      sort = #{sort},
      hidden = #{hidden},
      `path` = #{path},
      create_by = #{createBy},
      create_time = #{createTime},
      update_by = #{updateBy},
      update_time = #{updateTime},
      deleted = #{deleted},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.liyu.auth.entity.SysMenu" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="component != null">
        component,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="hidden != null">
        hidden,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="title != null">
        #{title},
      </if>
      <if test="type != null">
        #{type},
      </if>
      <if test="pid != null">
        #{pid},
      </if>
      <if test="permission != null">
        #{permission},
      </if>
      <if test="component != null">
        #{component},
      </if>
      <if test="sort != null">
        #{sort},
      </if>
      <if test="hidden != null">
        #{hidden},
      </if>
      <if test="path != null">
        #{path},
      </if>
      <if test="createBy != null">
        #{createBy},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateBy != null">
        #{updateBy},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="deleted != null">
        #{deleted},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="title != null">
        title = #{title},
      </if>
      <if test="type != null">
        `type` = #{type},
      </if>
      <if test="pid != null">
        pid = #{pid},
      </if>
      <if test="permission != null">
        permission = #{permission},
      </if>
      <if test="component != null">
        component = #{component},
      </if>
      <if test="sort != null">
        sort = #{sort},
      </if>
      <if test="hidden != null">
        hidden = #{hidden},
      </if>
      <if test="path != null">
        `path` = #{path},
      </if>
      <if test="createBy != null">
        create_by = #{createBy},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="deleted != null">
        deleted = #{deleted},
      </if>
    </trim>
  </insert>

    <select id="getUserMenuList" resultMap="BaseResultMap">
        select sm.id          as id,
               sm.title       as title,
               sm.type        as type,
               sm.pid         as pid,
               sm.permission  as permission,
               sm.component   as component,
               sm.sort        as sort,
               sm.hidden      as hidden,
               sm.path      as path,
               sm.create_by   as create_by,
               sm.create_time as create_time,
               sm.update_by   as update_by,
               sm.update_time as update_time
        from sys_menu as sm
                 left join sys_role_menu as srm on srm.menu_id = sm.id
                 left join sys_user_role as sur on sur.role_id = srm.role_id
        <where>
            and sur.user_id = #{userId}
                  and sm.deleted = ${@cn.liyu.base.constant.CommonConstant@DELETED_NO}
        </where>
        order by sm.sort asc
    </select>

  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_menu
    <where>
      and title = #{title}
      and deleted = ${@cn.liyu.base.constant.CommonConstant@DELETED_NO}
    </where>
  </select>
</mapper>